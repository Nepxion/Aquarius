# Spring cloud config
spring.application.name=aquarius-spring-cloud-service
server.port=2222

eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=false

eureka.client.serviceUrl.defaultZone=http://localhost:9528/eureka/

# Prefix
prefix=aquarius

# Lock config
# lock.enabled=true
# redisLock, zookeeperLock, localLock
lock.type=redisLock
# 当切面拦截出现异常，如果忽略该异常，则不影响当前业务方法调用，否则中断当前业务方法调用，缺省为true
# lock.aop.exception.ignore=true
# 扫描含有@Lock，@ReadLock，@WriteLock等注解的接口或者类所在目录
lock.scan.packages=com.nepxion.aquarius.example.lock

# Cache config
# cache.enabled=true
cache.type=redisCache
# 当切面拦截出现异常，如果忽略该异常，则不影响当前业务方法调用，否则中断当前业务方法调用，缺省为true
# cache.aop.exception.ignore=true
# 全局缓存过期值，单位毫秒（小于等于零，表示永不过期），当注解上没配置该值的时候，以全局值为准，缺省为-1
# cache.expire=-1
# 扫描含有@Cacheable，@CacheEvict，@CachePut等注解的接口或者类所在目录
cache.scan.packages=com.nepxion.aquarius.example.cache

# Limit config
# limit.enabled=true
# redisLimit, localLimit
limit.type=redisLimit
# 当切面拦截出现异常，如果忽略该异常，则不影响当前业务方法调用，否则中断当前业务方法调用，缺省为true
# limit.aop.exception.ignore=true
# 扫描含有@Limit等注解的接口或者类所在目录
limit.scan.packages=com.nepxion.aquarius.example.limit

# IdGenerator config
# idgenerator.enabled=true

# Curator config
curator.connectString=localhost:2181
curator.sessionTimeoutMs=15000 
curator.connectionTimeoutMs=15000
# exponentialBackoffRetry, boundedExponentialBackoffRetry, retryNTimes, retryForever, retryUntilElapsed
curator.retryType=retryNTimes
# ExponentialBackoffRetry
curator.exponentialBackoffRetry.baseSleepTimeMs=2000
curator.exponentialBackoffRetry.maxRetries=10
# BoundedExponentialBackoffRetry
curator.boundedExponentialBackoffRetry.baseSleepTimeMs=2000
curator.boundedExponentialBackoffRetry.maxSleepTimeMs=60000
curator.boundedExponentialBackoffRetry.maxRetries=10
# RetryNTimes
curator.retryNTimes.count=10
curator.retryNTimes.sleepMsBetweenRetries=2000
# RetryForever
curator.retryForever.retryIntervalMs=1000
# RetryUntilElapsed
curator.retryUntilElapsed.maxElapsedTimeMs=60000
curator.retryUntilElapsed.sleepMsBetweenRetries=2000

# Redis config
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
spring.redis.database=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0

# Redission config - refer to redission.yaml
# 自定义配置文件路径，放在resources目录下和根目录下的文件都会被扫描到
# redisson.path=redisson.yaml

# Frequent log print 
frequent.log.print=true

# Swagger config
swagger.service.base.package=com.nepxion.aquarius
swagger.service.description=Aquarius Spring Cloud Restful APIs
swagger.service.version=1.0.0
swagger.service.license.name=Apache License 2.0
swagger.service.license.url=http://www.apache.org/licenses/LICENSE-2.0
swagger.service.contact.name=Haojun Ren
swagger.service.contact.url=https://github.com/Nepxion/Aquarius
swagger.service.contact.email=1394997@qq.com
swagger.service.termsOfServiceUrl=http://www.nepxion.com