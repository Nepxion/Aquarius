<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    <bean id="aquariusJedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="30" /> <!-- 控制一个pool可分配多少个jedis实例 -->
        <property name="maxIdle" value="10" /> <!-- 最大能够保持idel状态的对象数 -->
        <property name="minIdle" value="5" /> <!-- 最小能够保持idel状态的对象数 -->
        <property name="maxWaitMillis" value="3000" /> <!-- 表示当borrow一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException --> 
        <property name="timeBetweenEvictionRunsMillis" value="30000"/> <!-- 多长时间检查一次连接池中空闲的连接 -->
         <property name="minEvictableIdleTimeMillis" value="30000"/> <!-- 空闲连接多长时间后会被收回, 单位是毫秒 -->
        <property name="testOnBorrow" value="true" /> <!-- 当调用borrow Object方法时，是否进行有效性检查 -->
        <property name="testOnReturn" value="true" /> <!-- 当调用return Object方法时，是否进行有效性检查 -->
         <property name="testWhileIdle" value="true"/> <!-- 当调用test idle方法时，是否进行有效性检查 -->       
    </bean>

    <bean id="aquariusJedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="127.0.0.1" />
        <property name="port" value="6379" />
        <property name="password" value="" />
        <property name="timeout" value="5000" />
        <property name="poolConfig" ref="aquariusJedisPoolConfig" />
    </bean>

    <bean id="aquariusStringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />

    <bean id="aquariusGenericJackson2JsonRedisSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />

    <bean id="aquariusRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="aquariusJedisConnectionFactory" />
        <property name="keySerializer" ref="aquariusStringRedisSerializer" />
        <property name="valueSerializer" ref="aquariusGenericJackson2JsonRedisSerializer" />
    </bean>
</beans>